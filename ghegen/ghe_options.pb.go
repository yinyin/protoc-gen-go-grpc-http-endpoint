// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: ghe_options.proto

package ghegen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GHEFileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Naming convention for generated (default) path.
	// Will not affect manually set path.
	// Acceptable values: `kebab-case`, `snake_case`, `lowerCamelCase`, `UpperCamelCase` or leave empty for not doing any convert.
	PathNamingConvention string            `protobuf:"bytes,1,opt,name=path_naming_convention,json=pathNamingConvention,proto3" json:"path_naming_convention,omitempty"`
	CommonInitialisms    []string          `protobuf:"bytes,2,rep,name=common_initialisms,json=commonInitialisms,proto3" json:"common_initialisms,omitempty"`
	NamingOverride       map[string]string `protobuf:"bytes,3,rep,name=naming_override,json=namingOverride,proto3" json:"naming_override,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GHEFileOptions) Reset() {
	*x = GHEFileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghe_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GHEFileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GHEFileOptions) ProtoMessage() {}

func (x *GHEFileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ghe_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GHEFileOptions.ProtoReflect.Descriptor instead.
func (*GHEFileOptions) Descriptor() ([]byte, []int) {
	return file_ghe_options_proto_rawDescGZIP(), []int{0}
}

func (x *GHEFileOptions) GetPathNamingConvention() string {
	if x != nil {
		return x.PathNamingConvention
	}
	return ""
}

func (x *GHEFileOptions) GetCommonInitialisms() []string {
	if x != nil {
		return x.CommonInitialisms
	}
	return nil
}

func (x *GHEFileOptions) GetNamingOverride() map[string]string {
	if x != nil {
		return x.NamingOverride
	}
	return nil
}

type GHEServiceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path              string              `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	StrictPrefixMatch string              `protobuf:"bytes,2,opt,name=strict_prefix_match,json=strictPrefixMatch,proto3" json:"strict_prefix_match,omitempty"`
	ExtraEndpoints    []*GHEMethodOptions `protobuf:"bytes,3,rep,name=extra_endpoints,json=extraEndpoints,proto3" json:"extra_endpoints,omitempty"`
}

func (x *GHEServiceOptions) Reset() {
	*x = GHEServiceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghe_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GHEServiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GHEServiceOptions) ProtoMessage() {}

func (x *GHEServiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ghe_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GHEServiceOptions.ProtoReflect.Descriptor instead.
func (*GHEServiceOptions) Descriptor() ([]byte, []int) {
	return file_ghe_options_proto_rawDescGZIP(), []int{1}
}

func (x *GHEServiceOptions) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GHEServiceOptions) GetStrictPrefixMatch() string {
	if x != nil {
		return x.StrictPrefixMatch
	}
	return ""
}

func (x *GHEServiceOptions) GetExtraEndpoints() []*GHEMethodOptions {
	if x != nil {
		return x.ExtraEndpoints
	}
	return nil
}

type GHEMethodOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path for invoke this method with HTTP GET method.
	// Set to `*` to use default value.
	// Set to `=method` (ie. `=post`) to use value set for other HTTP method.
	Get    string `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	Post   string `protobuf:"bytes,2,opt,name=post,proto3" json:"post,omitempty"`
	Put    string `protobuf:"bytes,3,opt,name=put,proto3" json:"put,omitempty"`
	Delete string `protobuf:"bytes,4,opt,name=delete,proto3" json:"delete,omitempty"`
	Patch  string `protobuf:"bytes,5,opt,name=patch,proto3" json:"patch,omitempty"`
	// Handler function for HEAD method. Applies to all above paths.
	GoHeadHandlerFunc string `protobuf:"bytes,6,opt,name=go_head_handler_func,json=goHeadHandlerFunc,proto3" json:"go_head_handler_func,omitempty"`
	// Handler function for OPTIONS method. Applies to all above paths.
	GoOptionsHandlerFunc string `protobuf:"bytes,7,opt,name=go_options_handler_func,json=goOptionsHandlerFunc,proto3" json:"go_options_handler_func,omitempty"`
	// Function to extract custom HTTP status code from reply object.
	// HTTP status code for error object will not be able to customize.
	GoExtractHttpStatusCode string `protobuf:"bytes,8,opt,name=go_extract_http_status_code,json=goExtractHttpStatusCode,proto3" json:"go_extract_http_status_code,omitempty"`
	// Define the identifier for this endpoint.
	// Use method name if omitted. Required for extra endpoints.
	Ident string `protobuf:"bytes,9,opt,name=ident,proto3" json:"ident,omitempty"`
}

func (x *GHEMethodOptions) Reset() {
	*x = GHEMethodOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghe_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GHEMethodOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GHEMethodOptions) ProtoMessage() {}

func (x *GHEMethodOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ghe_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GHEMethodOptions.ProtoReflect.Descriptor instead.
func (*GHEMethodOptions) Descriptor() ([]byte, []int) {
	return file_ghe_options_proto_rawDescGZIP(), []int{2}
}

func (x *GHEMethodOptions) GetGet() string {
	if x != nil {
		return x.Get
	}
	return ""
}

func (x *GHEMethodOptions) GetPost() string {
	if x != nil {
		return x.Post
	}
	return ""
}

func (x *GHEMethodOptions) GetPut() string {
	if x != nil {
		return x.Put
	}
	return ""
}

func (x *GHEMethodOptions) GetDelete() string {
	if x != nil {
		return x.Delete
	}
	return ""
}

func (x *GHEMethodOptions) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

func (x *GHEMethodOptions) GetGoHeadHandlerFunc() string {
	if x != nil {
		return x.GoHeadHandlerFunc
	}
	return ""
}

func (x *GHEMethodOptions) GetGoOptionsHandlerFunc() string {
	if x != nil {
		return x.GoOptionsHandlerFunc
	}
	return ""
}

func (x *GHEMethodOptions) GetGoExtractHttpStatusCode() string {
	if x != nil {
		return x.GoExtractHttpStatusCode
	}
	return ""
}

func (x *GHEMethodOptions) GetIdent() string {
	if x != nil {
		return x.Ident
	}
	return ""
}

var file_ghe_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*GHEFileOptions)(nil),
		Field:         50002,
		Name:          "grpc.httpendpoint.opts",
		Tag:           "bytes,50002,opt,name=opts",
		Filename:      "ghe_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*GHEServiceOptions)(nil),
		Field:         50002,
		Name:          "grpc.httpendpoint.base",
		Tag:           "bytes,50002,opt,name=base",
		Filename:      "ghe_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*GHEMethodOptions)(nil),
		Field:         50002,
		Name:          "grpc.httpendpoint.endpoint",
		Tag:           "bytes,50002,opt,name=endpoint",
		Filename:      "ghe_options.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional grpc.httpendpoint.GHEFileOptions opts = 50002;
	E_Opts = &file_ghe_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional grpc.httpendpoint.GHEServiceOptions base = 50002;
	E_Base = &file_ghe_options_proto_extTypes[1]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional grpc.httpendpoint.GHEMethodOptions endpoint = 50002;
	E_Endpoint = &file_ghe_options_proto_extTypes[2]
)

var File_ghe_options_proto protoreflect.FileDescriptor

var file_ghe_options_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x68, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x0e, 0x47, 0x48, 0x45,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x74,
	0x68, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x73, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x6d, 0x73,
	0x12, 0x5e, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x48,
	0x45, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x1a, 0x41, 0x0a, 0x13, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x47, 0x48, 0x45, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x4c, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x48, 0x45, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x10,
	0x47, 0x48, 0x45, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2f, 0x0a, 0x14, 0x67, 0x6f, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x6f, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x6f, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x3c,
	0x0a, 0x1b, 0x67, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x74,
	0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x3a, 0x55, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x48, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x3a, 0x5b, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x47,
	0x48, 0x45, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x61, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x47,
	0x48, 0x45, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x2d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f,
	0x67, 0x68, 0x65, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ghe_options_proto_rawDescOnce sync.Once
	file_ghe_options_proto_rawDescData = file_ghe_options_proto_rawDesc
)

func file_ghe_options_proto_rawDescGZIP() []byte {
	file_ghe_options_proto_rawDescOnce.Do(func() {
		file_ghe_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_ghe_options_proto_rawDescData)
	})
	return file_ghe_options_proto_rawDescData
}

var file_ghe_options_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ghe_options_proto_goTypes = []interface{}{
	(*GHEFileOptions)(nil),              // 0: grpc.httpendpoint.GHEFileOptions
	(*GHEServiceOptions)(nil),           // 1: grpc.httpendpoint.GHEServiceOptions
	(*GHEMethodOptions)(nil),            // 2: grpc.httpendpoint.GHEMethodOptions
	nil,                                 // 3: grpc.httpendpoint.GHEFileOptions.NamingOverrideEntry
	(*descriptorpb.FileOptions)(nil),    // 4: google.protobuf.FileOptions
	(*descriptorpb.ServiceOptions)(nil), // 5: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 6: google.protobuf.MethodOptions
}
var file_ghe_options_proto_depIdxs = []int32{
	3, // 0: grpc.httpendpoint.GHEFileOptions.naming_override:type_name -> grpc.httpendpoint.GHEFileOptions.NamingOverrideEntry
	2, // 1: grpc.httpendpoint.GHEServiceOptions.extra_endpoints:type_name -> grpc.httpendpoint.GHEMethodOptions
	4, // 2: grpc.httpendpoint.opts:extendee -> google.protobuf.FileOptions
	5, // 3: grpc.httpendpoint.base:extendee -> google.protobuf.ServiceOptions
	6, // 4: grpc.httpendpoint.endpoint:extendee -> google.protobuf.MethodOptions
	0, // 5: grpc.httpendpoint.opts:type_name -> grpc.httpendpoint.GHEFileOptions
	1, // 6: grpc.httpendpoint.base:type_name -> grpc.httpendpoint.GHEServiceOptions
	2, // 7: grpc.httpendpoint.endpoint:type_name -> grpc.httpendpoint.GHEMethodOptions
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	2, // [2:5] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ghe_options_proto_init() }
func file_ghe_options_proto_init() {
	if File_ghe_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ghe_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GHEFileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghe_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GHEServiceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghe_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GHEMethodOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ghe_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_ghe_options_proto_goTypes,
		DependencyIndexes: file_ghe_options_proto_depIdxs,
		MessageInfos:      file_ghe_options_proto_msgTypes,
		ExtensionInfos:    file_ghe_options_proto_extTypes,
	}.Build()
	File_ghe_options_proto = out.File
	file_ghe_options_proto_rawDesc = nil
	file_ghe_options_proto_goTypes = nil
	file_ghe_options_proto_depIdxs = nil
}
